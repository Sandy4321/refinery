{
  "name": "Refinery",
  "tagline": "Refinery - A locally deployable open-source web platform for analysis of large document collections",
  "body": "### Welcome to the documentation for Refinery.\r\nRefinery was a project supported by the Knight Foundation's prototype fund to build an NLP web application that simplifies the use of complicated NLP tools in an easy to use web interface. For the analysis of large document corpuses, Refinery provides a simple drag and drop interface along with interactive visualizations that help provide intuitive insights into your data.\r\n\r\n### How is it built?\r\nRefinery is deployed locally using Vagrant (tested on v1.8.1) and VirtualBox (tested on v5.0). The application is highly scalable and capable of processing large document corpuses due to a Bayesian nonparametric toolbox BNPy built around the latest advances for scalable inference in types of models. Refinery can be considered a general tool for quickly discovering a set of topics which can then be leveraged to quickly isolate and extract insights into relevant documents. \r\n\r\n### Installing and Running Refinery\r\nRefinery is a browser driven web application built primarily off of Python. It was developed with the requirement that its implementation process be as simple as possible. Refinery requires three main packages - Git, Virtualbox, and Vagrant VM. VirtualBox and Vagrant VM allows Refinery to exist within a virtual machine that is accessible through your browser. The Vagrant package allows for the deployment of a Puppet manifest, which enables the automated installation of a large number of necessary software modules. It **_requires approximately 2.3GB of hard drive space_** and a relatively fast Internet connection. **_Installation will run roughly 20-30 minutes of your time using a high-speed Internet connection_** so please keep that in mind before installing. Git is needed to clone the repository that will contain the main source code, but if you don't wish to use Git, you can always just download the zip file and uncompress it to a folder you like. However, you'll still need these two pieces of software:\r\n\r\n* [Oracle VM VirtualBox (working for v5.0)](https://www.virtualbox.org/)\r\n* [Vagrant (working for v1.8.1)](https://www.vagrantup.com/downloads.html)\r\n\r\nTo modify the installation process, the configuration file **VagrantFile** located within the root directory contains settings that help guide this process. Installation of Refinery is as follows from the command line:\r\n\r\n    git clone https://github.com/daeilkim/refinery.git\r\n    vagrant up\r\n\r\nAfter this command, Refinery will be booting up the virtual machine and loading up the web server. You'll need to then open up any browser and go to this URL: **http://11.11.11.11:8080**. You should see a login screen afterwards which you can login with:\r\n\r\n    username: doc\r\n    password: refinery\r\n\r\nTo see how you Refinery works, you can watch this [video](https://youtu.be/7yRQ1J9Z_LI) which shows a basic run-through using one of the included datasets within the repository.\r\n\r\n### Further information\r\nFor machine learning, Refinery uses the BNPy package [(BNPy Git Repository)](https://bitbucket.org/michaelchughes/bnpy-dev/). The backend is supported by a PostgreSQL database used to store document corpuses and Redis for the pub/sub messaging framework used to see realtime updates. The web application is built on Python Flask, Gunicorn, Celery, and Nginx.\r\n\r\n#### Logging into Vagrant\r\nOnce the repository is cloned and the command **vagrant up** has been executed, you'll be able to login by typing in:\r\n\r\n    vagrant ssh\r\n\r\nThis should bring you into the default home directory with the path **/home/vagrant**. From there, you'll have a virtual machine with a directory structure similar to a default Ubuntu installation. If you're interested in modifying anything associated with refinery, you'll find the application located in the **/vagrant/refinery** directory.\r\n\r\n#### Topic Modeling Code\r\nThe code that executes the topic models can be found in **/vagrant/refinery/webapp/topicmodel.py**. For those who have worked with BNPy before, you can find the execution command on line 266 as:\r\n\r\n    hmodel = bnpy.Run.run(data, 'HDPModel', 'Mult', 'VB', doSaveToDisk=False, K=exinfo.nTopics,\r\n                          nLap=100, initname=\"randomfromprior\",\r\n                          customFuncPath=\"refinery/webapp/\", customFuncArgs=json.dumps(a))\r\n\r\nFor more information on how to configure BNPy, please refer to the developer's documentation found on their Git repository [(BNPy Git Repository)](https://bitbucket.org/michaelchughes/bnpy-dev/).\r\n\r\n### Troubleshooting Refinery\r\nMost installation issues often are a result of outdated Vagrant links to Ubuntu images. The software was last checked to be functional as of 3/5/2016. Please contact @daeilkim if there are any installation issues.\r\n\r\n### Authors and License\r\nRefinery is an open source project under the MIT License\r\nCopyright (C) <2014> Daeil Kim (@daeilkim) \r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n### Packaged Software\r\nRefinery uses several NLP packages that are also open-sourced. It primarily uses BNPy (https://bitbucket.org/michaelchughes/bnpy-dev/) licensed under BSD-3, but also the **Splitta** algorithm for sentence boundary detection (https://code.google.com/archive/p/splitta/) which is licensed under Apache 2.0.",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}